#!/bin/bash

# Source helper functions
source .fun

# Proxy settings [optional] - set if your network requires a proxy to connect to the Internet
export http_proxy=
export https_proxy=
export no_proxy=localhost

## Target orchestrator TO=docker|kubernetes
### docker - choose when running locally or on ec2
### kubernetes - choose when running on a local, remote Kubernetes cluster or EKS
export TO=kubernetes

# AWS Settings
export AWS_REGION=${AWS_REGION:-us-east-1}
export ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
# Docker image settings
## REGISTRY: [optional] - Docker registry path including trailing "/". Example: registry.company.com/demo/
export REGISTRY=
if [ ! "$ACCOUNT" == "" ]; then
	export REGISTRY=${ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/
fi
if [ -n "${REGISTRY}" ]; then
  if [ "${REGISTRY: -1}" != "/" ]; then
    export REGISTRY="${REGISTRY}/"
  fi
fi
## IMAGE: <required> - Docker image name for this project. Example: myapp
export IMAGE=animeganv3
## VERSION: [optional] - Version tag for this Docker image. Example: v20180302
#export VERSION=v$(date +%Y%m%d)
export VERSION=latest
export TAG=$(if [ -z "${VERSION}" ]; then echo ""; else echo ":${VERSION}"; fi) 
## BUILD_OPTS: [optional] - arguments for the docker image build command
export BUILD_OPTS="--build-arg http_proxy=${http_proxy} --build-arg https_proxy=${https_proxy} --build-arg no_proxy=${no_proxy}"

# Docker container runtime settings
## CONTAINER_NAME: [optional] - Name of the Docker container including the --name switch. Example --name myapp
export CONTAINER=${IMAGE}
export CONTAINER_NAME="--name ${CONTAINER}"
### PORT_INTERNAL - port on which the application runs inside the container, if more than one port is needed, define additioal variables here
export PORT_INTERNAL=8080
### PORT_EXTERNAL - port to expose outside the container, if more than one port is needed, define additional variables here
export PORT_EXTERNAL=8080

## Port map [optional] - Mapping of external to internal ports including the -p switch. Example -p 80:8080 
export PORT_MAP="-p ${PORT_EXTERNAL}:${PORT_INTERNAL}"
## Volume map [optional] - Mapping of external to internal paths including the -v switch. Example $(pwd):/wd
export VOL_MAP="-v $(pwd):/wd"
## Network [optional] - Network name including the --net switch. Example --net mynet
export NETWORK=
## RUN_OPTS [optional] - additional options to specify with the run comman. Example -e POSTGRES_DB=dbname
export RUN_OPTS="-e http_proxy=$http_proxy -e https_proxy=$https_proxy -e no_proxy=$no_proxy"

## Kubernetes settings
### KUBERNETES_TEMPLATE_PATH - folder containing Kubernetes manifest templates
export KUBERNETES_TEMPLATE_PATH=./to/kubernetes/template
### KUBERNETES_APP_PATH - folder containing Kubernetes manifests
export KUBERNETES_APP_PATH=./to/kubernetes/app
### APP_NAME - name of the appliation to deploy
export APP_NAME=${CONTAINER}
### NAMESPACE - Kubernetes namespace where the app will run
export NAMESPACE=${APP_NAME}
### INSTANCE_TYPE - optional instance type on which application pods should run. To use, uncomment deployment template nodeSelector section.
export INSTANCE_TYPE=c5.2xlarge
